using Lcs9sem5pr1_DBtest.Models;
using System;
using Lcs9sem5pr1_DBtest;
using System.Net;
using System.Text;
using System.Threading.Tasks;
using Lcs9sem5pr1_DBtest.Abstraction;
//Семинар 5. Сервер, чат. Собираемся добавить поддержку работы с бд в наше приложение чата
//Code First. В messages Должны храниться сообщения
//в users список пользователей. Разработать модель т. о. чтобы учесть что в сообщениях
//есть не только автор, но и адресат и статус получения им сообщения

/*
 Разработать серверное приложение для обработки сообщений в чате с использованием базы
данных. Необходимо реализовать функционал регистрации новых клиентов, отправки
сообщений между клиентами с подтверждением доставки, а также хранение сообщений и
пользователей в базе данных. Приложение должно использовать UDP-сокеты для обмена
сообщениями и иметь возможность сериализации и десериализации сообщений в формате JSON.
Каждое сообщение должно содержать уникальный идентификатор и иметь возможность быть
адресованным как конкретному пользователю, так и всем пользователям чата
 */


/*
 1. Создать модель данных для хранения сообщений и пользователей. В модели должны быть учтены поля,
соответствующие требованиям задачи: сообщение, отправитель, получатель, статус получения и т.д.
2. Создать класс сервера, который будет обрабатывать входящие сообщения. Этот класс должен иметь методы
для регистрации новых клиентов, подтверждения получения сообщений и пересылки сообщений другим
клиентам.
3. Настроить сервер для приема входящих UDP-пакетов. При получении пакета, сервер должен десериализовать
сообщение из JSON, определить его тип (регистрация, подтверждение или обычное сообщение) и вызвать
соответствующий метод для обработки.
4. Использовать Entity Framework Core для взаимодействия с базой данных. При регистрации нового клиента
сервер должен добавить его в базу данных. При получении нового сообщения сервер должен сохранить его в
базу данных.
5. При получении сообщения сервер должен определить получателя и переслать ему сообщение. Пересылка
должна осуществляться через UDP.
6. Добавить обработку исключений для предотвращения падения сервера при возникновении ошибок.
Реализовать логирование действий сервера для отслеживания работы и выявления проблем.
7. Провести тестирование работы сервера с использованием различных сценариев взаимодействия. Отладить
код для выявления и исправления возможных ошибок.
 */

namespace Lcs9sem5pr1_DBtest
{
    internal class Program
    {
        static void Main(string[] args) //было без  async Task - void
        {
            if (args.Length == 0)
            {
                var s = new Server(new MessageSource(5430));
                s.Work();
            }
            else if (args.Length == 3) //string _name , string port, string ipAdress
            {
                
                var c = new Client();
                c.ClientListener();
                c.ClientListener();
                Console.ReadLine();
            }
            else
            {
                Console.WriteLine("Для запуска клиента введите ник-нейм , порт и IP сервера как параметры запуска приложения класс UnitTest1.cs");

            }
 
        }
    }
}
